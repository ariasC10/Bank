// <auto-generated />
using System;
using BankConsoleApp.DataAccess.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankConsoleApp.DataAccess.Migrations
{
    [DbContext(typeof(MySqlDbContext))]
    [Migration("20230214171924_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("BankConsoleApp.Core.Models.Account", b =>
                {
                    b.Property<uint>("AccountNumber")
                        .HasColumnType("int unsigned")
                        .HasColumnName("account_number");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("account_type");

                    b.Property<float>("Balance")
                        .HasColumnType("float")
                        .HasColumnName("balance");

                    b.Property<DateOnly>("CreationDate")
                        .HasColumnType("date")
                        .HasColumnName("creation_date");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("owner");

                    b.HasKey("AccountNumber")
                        .HasName("PRIMARY");

                    b.ToTable("account", (string)null);
                });

            modelBuilder.Entity("BankConsoleApp.Core.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionNumber")
                        .HasColumnType("int")
                        .HasColumnName("transaction_number");

                    b.Property<uint>("AccountNumber")
                        .HasColumnType("int unsigned")
                        .HasColumnName("account_number");

                    b.Property<DateOnly>("CreationDate")
                        .HasColumnType("date")
                        .HasColumnName("creation_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("description")
                        .HasDefaultValueSql("'N/A'");

                    b.Property<float>("Mount")
                        .HasColumnType("float")
                        .HasColumnName("mount");

                    b.HasKey("TransactionNumber")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AccountNumber" }, "fk_accountnumber_idx");

                    b.ToTable("transaction", (string)null);
                });

            modelBuilder.Entity("BankConsoleApp.Core.Models.Transaction", b =>
                {
                    b.HasOne("BankConsoleApp.Core.Models.Account", "AccountNumberNavigation")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountNumber")
                        .IsRequired()
                        .HasConstraintName("fk_accountnumber");

                    b.Navigation("AccountNumberNavigation");
                });

            modelBuilder.Entity("BankConsoleApp.Core.Models.Account", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
